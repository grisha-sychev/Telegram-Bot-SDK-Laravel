<?php

namespace App\Console\Commands;

use Illuminate\Console\Command;
use App\Models\Bot;

class EnvironmentCommand extends Command
{
    /**
     * The name and signature of the console command.
     *
     * @var string
     */
    protected $signature = 'bot:env {environment : –û–∫—Ä—É–∂–µ–Ω–∏–µ (dev/prod)} {--reset : –°–±—Ä–æ—Å–∏—Ç—å –∫ –∑–Ω–∞—á–µ–Ω–∏—é –∏–∑ env}';

    /**
     * The console command description.
     *
     * @var string
     */
    protected $description = '–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –æ–∫—Ä—É–∂–µ–Ω–∏–µ –¥–ª—è –±–æ—Ç–æ–≤ (dev/prod)';

    /**
     * Execute the console command.
     */
    public function handle()
    {
        $environment = $this->argument('environment');
        $reset = $this->option('reset');

        if ($reset) {
            Bot::resetCurrentEnvironment();
            $currentEnv = Bot::getCurrentEnvironment();
            $this->info("‚úÖ –û–∫—Ä—É–∂–µ–Ω–∏–µ —Å–±—Ä–æ—à–µ–Ω–æ –∫ –∑–Ω–∞—á–µ–Ω–∏—é –∏–∑ env: {$currentEnv}");
            return 0;
        }

        if (!in_array($environment, ['dev', 'prod'])) {
            $this->error('‚ùå –û–∫—Ä—É–∂–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å "dev" –∏–ª–∏ "prod"');
            return 1;
        }

        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–≤–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ
        Bot::setCurrentEnvironment($environment);
        
        $this->info("‚úÖ –û–∫—Ä—É–∂–µ–Ω–∏–µ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–æ –Ω–∞: {$environment}");
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã—Ö –±–æ—Ç–æ–≤ –¥–ª—è –Ω–æ–≤–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è
        $this->showActiveBots($environment);
        
        return 0;
    }

    /**
     * –ü–æ–∫–∞–∑–∞—Ç—å –∞–∫—Ç–∏–≤–Ω—ã—Ö –±–æ—Ç–æ–≤ –¥–ª—è —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è
     */
    private function showActiveBots(string $environment): void
    {
        $this->newLine();
        $this->info("ü§ñ –ê–∫—Ç–∏–≤–Ω—ã–µ –±–æ—Ç—ã –¥–ª—è –æ–∫—Ä—É–∂–µ–Ω–∏—è '{$environment}':");
        
        $bots = Bot::enabled()
            ->withTokenForEnvironment($environment)
            ->withDomainForEnvironment($environment)
            ->get();
        
        if ($bots->isEmpty()) {
            $this->warn("‚ö†Ô∏è  –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –±–æ—Ç–æ–≤ –¥–ª—è –æ–∫—Ä—É–∂–µ–Ω–∏—è '{$environment}'");
            return;
        }
        
        $table = [];
        foreach ($bots as $bot) {
            $table[] = [
                $bot->name,
                $bot->getMaskedTokenForEnvironment($environment),
                $bot->getDomainForEnvironment($environment),
                $bot->webhook_url ?: '–ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω'
            ];
        }
        
        $this->table(
            ['–ò–º—è', '–¢–æ–∫–µ–Ω', '–î–æ–º–µ–Ω', 'Webhook URL'],
            $table
        );
    }
} 